<?xml version="1.0" encoding="UTF-8"?>
<localEntry key="FileDateCheckXSLT" xmlns="http://ws.apache.org/ns/synapse">
    <xsl:stylesheet version="3.0" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:json="http://www.w3.org/2005/xpath-functions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <!-- Accept previousDate as a parameter -->
        <xsl:param name="previousDate"/>
        <!-- Template to match the root element -->
        <xsl:template match="/">
            <json:object>
                <json:key name="listFilesResult">
                    <json:object>
                        <json:key name="success">
                            <json:value>true</json:value>
                        </json:key>
                        <json:key name="directory">
                            <json:object>
                                <json:key name="@name">
                                    <json:value>Archive</json:value>
                                </json:key>
                                <json:key name="file">
                                    <json:array>
                                        <!-- Iterate over each file -->
                                        <xsl:for-each select="/listFilesResult/directory/file">
                                            <xsl:variable name="fileName" select="."/>
                                            <!-- Extract 8 digits (date) from the filename -->
                                            <xsl:variable name="dateStr" select="replace($fileName, '.*(\d{8}).*', '$1')"/>
                                            <!-- Compare the extracted date with previousDate -->
                                            <xsl:variable name="isOlder" select="fn:compare($dateStr, $previousDate) &lt; 0"/>
                                            <!-- Only output files with a date older than previousDate -->
                                            <xsl:if test="$isOlder">
                                                <json:value>
                                                    <xsl:value-of select="$fileName"/>
                                                </json:value>
                                            </xsl:if>
                                        </xsl:for-each>
                                    </json:array>
                                </json:key>
                            </json:object>
                        </json:key>
                    </json:object>
                </json:key>
            </json:object>
        </xsl:template>
    </xsl:stylesheet>
</localEntry>
